// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: message.sql

package db

import (
	"context"
	"database/sql"
)

const createMessage = `-- name: CreateMessage :one
INSERT INTO messages (
  room_id,
  reply_message_id,
  sender_id,
  message_text
) VALUES (
  $1, $2, $3, $4
) RETURNING id, room_id, reply_message_id, sender_id, message_text, modified_at, created_at
`

type CreateMessageParams struct {
	RoomID         int64         `json:"room_id"`
	ReplyMessageID sql.NullInt64 `json:"reply_message_id"`
	SenderID       int64         `json:"sender_id"`
	MessageText    string        `json:"message_text"`
}

func (q *Queries) CreateMessage(ctx context.Context, arg CreateMessageParams) (Message, error) {
	row := q.db.QueryRowContext(ctx, createMessage,
		arg.RoomID,
		arg.ReplyMessageID,
		arg.SenderID,
		arg.MessageText,
	)
	var i Message
	err := row.Scan(
		&i.ID,
		&i.RoomID,
		&i.ReplyMessageID,
		&i.SenderID,
		&i.MessageText,
		&i.ModifiedAt,
		&i.CreatedAt,
	)
	return i, err
}
